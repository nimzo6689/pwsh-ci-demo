name: 'Testing and Linting'
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  ci:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v3
    - name: Install from PSGallery
      shell: pwsh
      run: |
        Write-host $PSVersionTable.PSVersion.Major $PSVersionTable.PSRemotingProtocolVersion.Minor
        Set-PSRepository psgallery -InstallationPolicy trusted
        Install-Module -Name Pester -RequiredVersion 5.5.0 -confirm:$false -Force -ErrorAction Stop
        Install-Module -Name PSScriptAnalyzer -RequiredVersion 1.21.0 -confirm:$false -Force -ErrorAction Stop

    - name: Lint with PSScriptAnalyzer
      shell: pwsh
      run: |
        Invoke-ScriptAnalyzer -Path *.ps*1 -Recurse -OutVariable issues
        $errors   = $issues.Where({$_.Severity -eq 'Error'})
        $warnings = $issues.Where({$_.Severity -eq 'Warning'})
        if ($errors) {
            Write-Error "There were $($errors.Count) errors and $($warnings.Count) warnings total." -ErrorAction Stop
        } else {
            Write-Output "There were $($errors.Count) errors and $($warnings.Count) warnings total."
        }

    - name: Run Pester tests
      run: |
        Invoke-Pester -Path ".\PwshCIDemo.Tests" -CodeCoverage ".\PwshCIDemo\*.ps*1" -CodeCoverageOutputFileFormat "JaCoCo" -Passthru;
      shell: pwsh

    # - name: Upload test coverage to Codecov
    #   uses: codecov/codecov-action@v1.0.13
    #   with:
    #     name: BuildName
    #     token: ${{ secrets.CODECOV }}
    #     file: coverage.xml
